/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WorldAdminRole;

import Business.Helper.CardLayoutContainer;
import Business.Helper.GenerateReports;
import Business.Helper.UserNameExists;
import Business.Helper.Validation;
import Business.Organization.DonorOrganization;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorldEnterprise;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author "Smit Shah, NUID: 001748537, AED - Final Project"
 */
public class ManageWorldUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageUserAccountJPanel
     */
    private JPanel userProcessContainer;
    private WorldEnterprise objWorldEnterprise;
    private Organization objOrganization;
    private UserAccount objWAUserAccount;
    private String userName, mainPassword, confirmPassword;

    public ManageWorldUserAccountJPanel(JPanel userProcessContainerPassed, WorldEnterprise objWorldEnterprisePassed,
            Organization objOrganizationPassed, UserAccount objUserAccountPassed) {
        
        initComponents();
        this.userProcessContainer = userProcessContainerPassed;
        this.objWorldEnterprise = objWorldEnterprisePassed;
        this.objOrganization = objOrganizationPassed;
        this.objWAUserAccount = objUserAccountPassed;
        
        populateMainComboBox();
        populateAddUserComboBox();

    }

    private void populateMainComboBox() {

        worldOrgPopulateJComboBox.removeAllItems();
        //worldOrgPopulateJComboBox.addItem("All Organization");

        for (Organization objOrganization : objWorldEnterprise.getObjOrganizationDirectory().getOrganizationList()) {

            worldOrgPopulateJComboBox.addItem(objOrganization);
        }
    }

    private void populateOrgUserTable(Organization objOrganizationPassed) {

        DefaultTableModel dtm = (DefaultTableModel) userAccountJTable.getModel();
        dtm.setRowCount(0);

        for (UserAccount objUserAccount : objOrganizationPassed.getObjUserAccountDirectory().getUserAccountList()) {

            Object row[] = new Object[6];
            row[0] = objUserAccount.getObjPerson().getPersonID();
            row[1] = objUserAccount.getObjPerson();
            row[2] = objUserAccount;
            row[3] = objOrganizationPassed.getClass().getSimpleName();
            row[4] = objUserAccount.getObjRole();
            row[5] = objUserAccount.getUserAccountStatus();

            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userAccountJTable = new javax.swing.JTable();
        worldOrgJComboBox = new javax.swing.JComboBox();
        userJComboBox = new javax.swing.JComboBox();
        roleJComboBox = new javax.swing.JComboBox();
        lblTitle = new javax.swing.JLabel();
        lblOrganization = new javax.swing.JLabel();
        lblEmployee = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        userNameJTextFiled = new javax.swing.JTextField();
        lblUserName = new javax.swing.JLabel();
        createUserAccountJButton = new javax.swing.JButton();
        mainPasswordJLabel = new javax.swing.JLabel();
        userConfirmJPasswordField = new javax.swing.JPasswordField();
        conPasswordJLabel = new javax.swing.JLabel();
        userJPasswordField = new javax.swing.JPasswordField();
        lblOrganization1 = new javax.swing.JLabel();
        worldOrgPopulateJComboBox = new javax.swing.JComboBox();
        backJButton = new javax.swing.JButton();
        lblRole1 = new javax.swing.JLabel();
        accountStatusJComboBox = new javax.swing.JComboBox();
        activateJButton = new javax.swing.JButton();
        pendingJButton = new javax.swing.JButton();
        disableJButton = new javax.swing.JButton();
        lblTitle1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        userAccountJTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        userAccountJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Person ID", "Person Name", "User Name", "Organization", "Role", "User Accunt Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userAccountJTable);
        if (userAccountJTable.getColumnModel().getColumnCount() > 0) {
            userAccountJTable.getColumnModel().getColumn(0).setResizable(false);
            userAccountJTable.getColumnModel().getColumn(1).setResizable(false);
            userAccountJTable.getColumnModel().getColumn(2).setResizable(false);
            userAccountJTable.getColumnModel().getColumn(3).setResizable(false);
            userAccountJTable.getColumnModel().getColumn(4).setResizable(false);
            userAccountJTable.getColumnModel().getColumn(5).setResizable(false);
        }

        worldOrgJComboBox.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        worldOrgJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                worldOrgJComboBoxActionPerformed(evt);
            }
        });

        userJComboBox.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        roleJComboBox.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        roleJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleJComboBoxActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblTitle.setText("Manage Persons/Users Account");

        lblOrganization.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblOrganization.setText("Organization");

        lblEmployee.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblEmployee.setText("Employee");

        lblRole.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblRole.setText("Role");

        userNameJTextFiled.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblUserName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblUserName.setText("User Name");

        createUserAccountJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        createUserAccountJButton.setText("Create user Account");
        createUserAccountJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserAccountJButtonActionPerformed(evt);
            }
        });

        mainPasswordJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        mainPasswordJLabel.setText("Password");

        userConfirmJPasswordField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        conPasswordJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        conPasswordJLabel.setText("Confirm Password");

        userJPasswordField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        lblOrganization1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblOrganization1.setText("Organization");

        worldOrgPopulateJComboBox.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        worldOrgPopulateJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                worldOrgPopulateJComboBoxActionPerformed(evt);
            }
        });

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        lblRole1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblRole1.setText("Account Status");

        accountStatusJComboBox.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        accountStatusJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountStatusJComboBoxActionPerformed(evt);
            }
        });

        activateJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        activateJButton.setText("Activate");
        activateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activateJButtonActionPerformed(evt);
            }
        });

        pendingJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        pendingJButton.setText("Pending");
        pendingJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendingJButtonActionPerformed(evt);
            }
        });

        disableJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        disableJButton.setText("Disable");
        disableJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disableJButtonActionPerformed(evt);
            }
        });

        lblTitle1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblTitle1.setText("Add Persons/Users Account");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEmployee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRole, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUserName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainPasswordJLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(conPasswordJLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRole1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOrganization, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblOrganization1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(51, 51, 51)
                                    .addComponent(worldOrgPopulateJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(backJButton)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 903, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(activateJButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(pendingJButton)
                                                .addGap(302, 302, 302)
                                                .addComponent(disableJButton))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(createUserAccountJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(userJPasswordField, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(userJComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(userNameJTextFiled, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(userConfirmJPasswordField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                                                .addComponent(worldOrgJComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(roleJComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(accountStatusJComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblTitle)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(worldOrgPopulateJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrganization1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(disableJButton)
                    .addComponent(pendingJButton)
                    .addComponent(activateJButton))
                .addGap(18, 18, 18)
                .addComponent(lblTitle1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(worldOrgJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrganization))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmployee))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRole))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountStatusJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRole1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserName)
                    .addComponent(userNameJTextFiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainPasswordJLabel)
                    .addComponent(userJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userConfirmJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(conPasswordJLabel))
                .addGap(18, 18, 18)
                .addComponent(createUserAccountJButton)
                .addGap(18, 18, 18)
                .addComponent(backJButton)
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateAddUserComboBox() {

        worldOrgJComboBox.removeAllItems();

        for (Organization objOrganization : objWorldEnterprise.getObjOrganizationDirectory().getOrganizationList()) {

            if (!(objOrganization instanceof DonorOrganization)) {
                worldOrgJComboBox.addItem(objOrganization);
            }
        }
    }


    private void worldOrgJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_worldOrgJComboBoxActionPerformed

        Organization objOrganization = (Organization) worldOrgJComboBox.getSelectedItem();

        if (objOrganization != null) {
            populateUserJComboBox(objOrganization);
            populateRoleJComboBox(objOrganization);
            populateUserAccountStatusJComboBox();
        }
    }//GEN-LAST:event_worldOrgJComboBoxActionPerformed

    private void populateUserJComboBox(Organization objOrganizationPassed) {

        userJComboBox.removeAllItems();

        for (Person objPerson : objOrganizationPassed.getObjPersonDirectory().getPersonList()) {

            userJComboBox.addItem(objPerson);
        }
    }

    private void populateRoleJComboBox(Organization objOrganizationPassed) {

        roleJComboBox.removeAllItems();

        for (Role objRole : objOrganizationPassed.getSupportedRole()) {

            roleJComboBox.addItem(objRole);
        }
    }

    private void populateUserAccountStatusJComboBox() {

        accountStatusJComboBox.removeAllItems();

        for (UserAccount.StatusType accountStatus : UserAccount.StatusType.values()) {

            accountStatusJComboBox.addItem(accountStatus);
        }
    }

    private void roleJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleJComboBoxActionPerformed

    private void createUserAccountJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserAccountJButtonActionPerformed

        //Validation
        boolean validationSuccess;
        validationSuccess = validation();

        if (validationSuccess) {

            UserAccount objUserAccount = (UserAccount) UserNameExists.userNameCheck(objWorldEnterprise, userName);

            if (objUserAccount == null) {

                Person objPerson = (Person) userJComboBox.getSelectedItem();
                Role objRole = (Role) roleJComboBox.getSelectedItem();
                Organization objOrganization = (Organization) worldOrgJComboBox.getSelectedItem();
                UserAccount.StatusType accountStatus = (UserAccount.StatusType) accountStatusJComboBox.getSelectedItem();

                if (objPerson != null && objRole != null && objOrganization != null && accountStatus != null) {

                    if (mainPassword.equals(confirmPassword)) {
                        objOrganization.getObjUserAccountDirectory().createNewUserAccount(userName, mainPassword, objPerson, objRole, accountStatus.getValue());

                        JOptionPane.showMessageDialog(null, "New user user account added successfully!");

                        worldOrgPopulateJComboBox.setSelectedItem(objOrganization);

                        userNameJTextFiled.setText(null);
                        userJPasswordField.setText(null);
                        userConfirmJPasswordField.setText(null);

                    } else {
                        JOptionPane.showMessageDialog(null, "Password does not matches");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please select again or some values are missing");
                }

            } else {
                JOptionPane.showMessageDialog(null, "User Name already exists! Please use some other username");
            }
        }
    }//GEN-LAST:event_createUserAccountJButtonActionPerformed

    private boolean validation() {

        userName = userNameJTextFiled.getText().trim();
        mainPassword = String.valueOf(userJPasswordField.getPassword());
        confirmPassword = String.valueOf(userConfirmJPasswordField.getPassword());

        if (Validation.checkForNull(userName)) {
            JOptionPane.showMessageDialog(null, "Please enter username");
            userNameJTextFiled.requestFocus();
            return false;
        }

        if (Validation.checkForOnlyNumAlphabets(userName)) {
            JOptionPane.showMessageDialog(null, "Please enter proper username. It should contain only alphabets and numbers");
            userNameJTextFiled.requestFocus();
            return false;
        }

        if (Validation.checkForNull(mainPassword)) {
            JOptionPane.showMessageDialog(null, "Please enter password");
            userJPasswordField.requestFocus();
            return false;
        }

        if (Validation.checkForNull(confirmPassword)) {
            JOptionPane.showMessageDialog(null, "Please enter confirm password");
            userConfirmJPasswordField.requestFocus();
            return false;
        }

        return true;
    }


    private void worldOrgPopulateJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_worldOrgPopulateJComboBoxActionPerformed

        Organization objOrganization = (Organization) worldOrgPopulateJComboBox.getSelectedItem();

        if (objOrganization != null) {
            populateOrgUserTable(objOrganization);
        }
    }//GEN-LAST:event_worldOrgPopulateJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        CardLayoutContainer.removeCurrentCardLayout(userProcessContainer, this);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void accountStatusJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountStatusJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountStatusJComboBoxActionPerformed

    private void activateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activateJButtonActionPerformed

        UserAccount objUserAccount = null;

        int selectedUser = userAccountJTable.getSelectedRow();

        if (selectedUser < 0) {
            JOptionPane.showMessageDialog(null, "Please select a User");
            return;
        }

        objUserAccount = (UserAccount) userAccountJTable.getValueAt(selectedUser, 2);

        if (objUserAccount != null) {

            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Acitve.getValue())) {
                
                JOptionPane.showMessageDialog(null, "Acccount is already active");
                return;
            }
            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Disabled.getValue())
                    || objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Pending.getValue())) {

                String previousStatus = objUserAccount.getUserAccountStatus();
                
                objUserAccount.setUserAccountStatus(UserAccount.StatusType.Acitve.getValue());
                JOptionPane.showMessageDialog(null, "Acccount activated");

                populateMainComboBox(); 
                
                //AccountLogs
                String accountLogs =  objUserAccount.getObjPerson().getPersonID() + ","
                        + objUserAccount.getObjPerson() + ","
                        + objUserAccount + ","
                        + previousStatus + ","
                        + objUserAccount.getUserAccountStatus() + ","
                        + objWAUserAccount + ","
                        + objOrganization + ","
                        + new Date();
                
                GenerateReports.userAccountLogs(accountLogs);
                
            }
        }
    }//GEN-LAST:event_activateJButtonActionPerformed

    private void pendingJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pendingJButtonActionPerformed

        UserAccount objUserAccount = null;

        int selectedUser = userAccountJTable.getSelectedRow();

        if (selectedUser < 0) {
            JOptionPane.showMessageDialog(null, "Please select a User");
            return;
        }

        objUserAccount = (UserAccount) userAccountJTable.getValueAt(selectedUser, 2);

        if (objUserAccount != null) {

            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Pending.getValue())) {
                
                JOptionPane.showMessageDialog(null, "Acccount is already Pending");
                return;
            }
            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Disabled.getValue())
                    || objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Acitve.getValue())) {

                String previousStatus = objUserAccount.getUserAccountStatus();
                
                objUserAccount.setUserAccountStatus(UserAccount.StatusType.Pending.getValue());
                JOptionPane.showMessageDialog(null, "Acccount set to Pending");

                populateMainComboBox();   
                
                //AccountLogs
                String accountLogs =  objUserAccount.getObjPerson().getPersonID() + ","
                        + objUserAccount.getObjPerson() + ","
                        + objUserAccount + ","
                        + previousStatus + ","
                        + objUserAccount.getUserAccountStatus() + ","
                        + objWAUserAccount + ","
                        + objOrganization + ","
                        + new Date();
                
                GenerateReports.userAccountLogs(accountLogs);
            }
        } 
    }//GEN-LAST:event_pendingJButtonActionPerformed

    private void disableJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disableJButtonActionPerformed

        UserAccount objUserAccount = null;

        int selectedUser = userAccountJTable.getSelectedRow();

        if (selectedUser < 0) {
            JOptionPane.showMessageDialog(null, "Please select a User");
            return;
        }

        objUserAccount = (UserAccount) userAccountJTable.getValueAt(selectedUser, 2);

        if (objUserAccount != null) {

            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Disabled.getValue())) {
                
                JOptionPane.showMessageDialog(null, "Acccount is already Disabled");
                return;
            }
            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Acitve.getValue())
                    || objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Pending.getValue())) {

                String previousStatus = objUserAccount.getUserAccountStatus();
                
                objUserAccount.setUserAccountStatus(UserAccount.StatusType.Disabled.getValue());
                JOptionPane.showMessageDialog(null, "Acccount Disabled");

                populateMainComboBox();   
                
                //AccountLogs
                String accountLogs =  objUserAccount.getObjPerson().getPersonID() + ","
                        + objUserAccount.getObjPerson() + ","
                        + objUserAccount + ","
                        + previousStatus + ","
                        + objUserAccount.getUserAccountStatus() + ","
                        + objWAUserAccount + ","
                        + objOrganization + ","
                        + new Date();
                
                GenerateReports.userAccountLogs(accountLogs);
            }
        }
    }//GEN-LAST:event_disableJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox accountStatusJComboBox;
    private javax.swing.JButton activateJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel conPasswordJLabel;
    private javax.swing.JButton createUserAccountJButton;
    private javax.swing.JButton disableJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEmployee;
    private javax.swing.JLabel lblOrganization;
    private javax.swing.JLabel lblOrganization1;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblRole1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel mainPasswordJLabel;
    private javax.swing.JButton pendingJButton;
    private javax.swing.JComboBox roleJComboBox;
    private javax.swing.JTable userAccountJTable;
    private javax.swing.JPasswordField userConfirmJPasswordField;
    private javax.swing.JComboBox userJComboBox;
    private javax.swing.JPasswordField userJPasswordField;
    private javax.swing.JTextField userNameJTextFiled;
    private javax.swing.JComboBox worldOrgJComboBox;
    private javax.swing.JComboBox worldOrgPopulateJComboBox;
    // End of variables declaration//GEN-END:variables
}
