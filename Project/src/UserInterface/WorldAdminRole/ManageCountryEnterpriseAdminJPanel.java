/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WorldAdminRole;

import Business.CountryEnterprise.CountryEnterprise;
import Business.Helper.CardLayoutContainer;
import Business.Helper.UserNameExists;
import Business.Helper.Validation;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.Role.CountryAdminRole;
import Business.UserAccount.UserAccount;
import Business.WorldEnterprise;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author "Smit Shah, NUID: 001748537, AED - Final Project"
 */
public class ManageCountryEnterpriseAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCountryEnterpriseAdmin
     */
    private JPanel userProcessContainer;
    private CountryEnterprise objCountryEnterprise;
    private WorldEnterprise objWorldEnterprise;
    private String adminFirstName, adminLastName, adminUserName, adminPassword, adminConfirmPassword;

    public ManageCountryEnterpriseAdminJPanel(JPanel userProcessContainerPassed,
            WorldEnterprise objWorldEnterprisePassed, CountryEnterprise objCountryEnterprisePassed) {
        initComponents();

        this.userProcessContainer = userProcessContainerPassed;
        this.objCountryEnterprise = objCountryEnterprisePassed;
        this.objWorldEnterprise = objWorldEnterprisePassed;

        populateCountryAdminTable();

    }

    private void populateCountryAdminTable() {

        DefaultTableModel dtm = (DefaultTableModel) countryAdminJTable.getModel();
        dtm.setRowCount(0);

        for (Organization objOrganization : objCountryEnterprise.getObjOrganizationDirectory().getOrganizationList()) {

            if (objOrganization.getClass().getSimpleName().equals(Organization.OrganizationType.CountryAdmin.getValue())) {

                for (UserAccount objUserAccount : objOrganization.getObjUserAccountDirectory().getUserAccountList()) {

                    Object row[] = new Object[4];
                    row[0] = objUserAccount.getObjPerson().getPersonID();
                    row[1] = objUserAccount.getObjPerson();
                    row[2] = objUserAccount;
                    row[3] = objUserAccount.getUserAccountStatus();

                    dtm.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        countryAdminJTable = new javax.swing.JTable();
        title1JLabel = new javax.swing.JLabel();
        firstNameJLabel = new javax.swing.JLabel();
        firstNameJTextField = new javax.swing.JTextField();
        userNameJLabel = new javax.swing.JLabel();
        adminUserNameJTextField = new javax.swing.JTextField();
        mainPasswordJLabel = new javax.swing.JLabel();
        addAdminJButton = new javax.swing.JButton();
        confirmaPasswordJLabel = new javax.swing.JLabel();
        adminConfirmJPasswordField = new javax.swing.JPasswordField();
        adminJPasswordField = new javax.swing.JPasswordField();
        backJButton = new javax.swing.JButton();
        activateJButton = new javax.swing.JButton();
        disableJButton = new javax.swing.JButton();
        lastNameJLabel = new javax.swing.JLabel();
        lastNameJTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        titleJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        titleJLabel.setText("Manage Country Enterprise Admin");

        countryAdminJTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        countryAdminJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Admin Name", "Admin User Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(countryAdminJTable);
        if (countryAdminJTable.getColumnModel().getColumnCount() > 0) {
            countryAdminJTable.getColumnModel().getColumn(0).setResizable(false);
            countryAdminJTable.getColumnModel().getColumn(1).setResizable(false);
            countryAdminJTable.getColumnModel().getColumn(2).setResizable(false);
            countryAdminJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        title1JLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        title1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title1JLabel.setText("Add New Admin");

        firstNameJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        firstNameJLabel.setText("First Name");

        firstNameJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        userNameJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        userNameJLabel.setText("User Name");

        adminUserNameJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        mainPasswordJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        mainPasswordJLabel.setText("Password");

        addAdminJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        addAdminJButton.setText("Add new Admin");
        addAdminJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAdminJButtonActionPerformed(evt);
            }
        });

        confirmaPasswordJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        confirmaPasswordJLabel.setText("Confirm Password");

        adminConfirmJPasswordField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        adminJPasswordField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        activateJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        activateJButton.setText("Activate Account");
        activateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activateJButtonActionPerformed(evt);
            }
        });

        disableJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        disableJButton.setText("Disable Account");
        disableJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disableJButtonActionPerformed(evt);
            }
        });

        lastNameJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lastNameJLabel.setText("Last Name");

        lastNameJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(titleJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lastNameJLabel)
                            .addComponent(title1JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userNameJLabel)
                                    .addComponent(mainPasswordJLabel)
                                    .addComponent(confirmaPasswordJLabel)
                                    .addComponent(firstNameJLabel))
                                .addGap(117, 117, 117)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(firstNameJTextField)
                                    .addComponent(addAdminJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(adminJPasswordField)
                                    .addComponent(adminUserNameJTextField)
                                    .addComponent(adminConfirmJPasswordField)
                                    .addComponent(lastNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backJButton)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(activateJButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(disableJButton))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleJLabel)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(disableJButton)
                    .addComponent(activateJButton))
                .addGap(35, 35, 35)
                .addComponent(title1JLabel)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameJLabel)
                    .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameJLabel)
                    .addComponent(lastNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameJLabel)
                    .addComponent(adminUserNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainPasswordJLabel)
                    .addComponent(adminJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmaPasswordJLabel)
                    .addComponent(adminConfirmJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addAdminJButton)
                .addGap(44, 44, 44)
                .addComponent(backJButton)
                .addGap(50, 50, 50))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addAdminJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAdminJButtonActionPerformed

        //Validation
        boolean validationSuccess;
        validationSuccess = validation();

        if (validationSuccess) {

            UserAccount objUserAccount = UserNameExists.userNameCheck(objWorldEnterprise, adminUserName);

            if (objUserAccount != null) {

                JOptionPane.showMessageDialog(null, "User Name already exists. Please use some other username");
            } else {

                if (adminPassword.equals(adminConfirmPassword)) {
                    for (Organization objOrganization : objCountryEnterprise.getObjOrganizationDirectory().getOrganizationList()) {

                        if (objOrganization.getClass().getSimpleName().equals(Organization.OrganizationType.CountryAdmin.getValue())) {

                            Person objPersonCountryAdmin = new Person(objOrganization.getClass().getSimpleName());
                            objPersonCountryAdmin.setPersonFirstName(adminFirstName);
                            objPersonCountryAdmin.setPersonLastName(adminLastName);

                            objOrganization.getObjPersonDirectory().getPersonList().add(objPersonCountryAdmin);
                            objOrganization.getObjUserAccountDirectory().createNewUserAccount(adminUserName, adminPassword, objPersonCountryAdmin, new CountryAdminRole(), UserAccount.StatusType.Acitve.getValue());

                            JOptionPane.showMessageDialog(null, "New admin added successfully");

                            firstNameJTextField.setText(null);
                            lastNameJTextField.setText(null);
                            adminUserNameJTextField.setText(null);
                            adminJPasswordField.setText(null);
                            adminConfirmJPasswordField.setText(null);

                            populateCountryAdminTable();
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Password does not matches");
                }
            }

        }
    }//GEN-LAST:event_addAdminJButtonActionPerformed

    private boolean validation() {

        adminFirstName = firstNameJTextField.getText().trim();
        adminLastName = lastNameJTextField.getText().trim();
        adminUserName = adminUserNameJTextField.getText().trim();
        adminPassword = String.valueOf(adminJPasswordField.getPassword());
        adminConfirmPassword = String.valueOf(adminConfirmJPasswordField.getPassword());

        if (Validation.checkForNull(adminFirstName)) {
            JOptionPane.showMessageDialog(null, "Please enter first name");
            firstNameJTextField.requestFocus();
            return false;
        }

        if (Validation.checkForOnlyAlphabets(adminFirstName)) {
            JOptionPane.showMessageDialog(null, "Please enter a proper first name. It should contain only alphabets");
            firstNameJTextField.requestFocus();
            return false;
        }

        if (Validation.checkForNull(adminLastName)) {
            JOptionPane.showMessageDialog(null, "Please enter last name");
            lastNameJTextField.requestFocus();
            return false;
        }

        if (Validation.checkForOnlyAlphabets(adminLastName)) {
            JOptionPane.showMessageDialog(null, "Please enter a proper last name. It should contain only alphabets");
            lastNameJTextField.requestFocus();
            return false;
        }

        if (Validation.checkForNull(adminUserName)) {
            JOptionPane.showMessageDialog(null, "Please enter username");
            adminUserNameJTextField.requestFocus();
            return false;
        }

        if (Validation.checkForOnlyNumAlphabets(adminUserName)) {
            JOptionPane.showMessageDialog(null, "Please enter proper username. It should contain only alphabets and numbers");
            adminUserNameJTextField.requestFocus();
            return false;
        }

        if (Validation.checkForNull(adminPassword)) {
            JOptionPane.showMessageDialog(null, "Please enter password");
            adminJPasswordField.requestFocus();
            return false;
        }

        if (Validation.checkForNull(adminConfirmPassword)) {
            JOptionPane.showMessageDialog(null, "Please enter confirm password");
            adminConfirmJPasswordField.requestFocus();
            return false;
        }
        
        return true;
    }

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        CardLayoutContainer.removeCurrentCardLayout(userProcessContainer, this);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void activateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activateJButtonActionPerformed

        UserAccount objUserAccount = null;

        int selectedAdmin = countryAdminJTable.getSelectedRow();

        if (selectedAdmin < 0) {
            JOptionPane.showMessageDialog(null, "Please select an Admin");
            return;
        }

        objUserAccount = (UserAccount) countryAdminJTable.getValueAt(selectedAdmin, 2);

        if (objUserAccount != null) {

            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Acitve.getValue())) {
                JOptionPane.showMessageDialog(null, "Acccount is already active");
                return;
            }
            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Disabled.getValue())
                    || objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Pending.getValue())) {

                objUserAccount.setUserAccountStatus(UserAccount.StatusType.Acitve.getValue());
                JOptionPane.showMessageDialog(null, "Acccount activated");

                populateCountryAdminTable();
            }
        }

    }//GEN-LAST:event_activateJButtonActionPerformed

    private void disableJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disableJButtonActionPerformed

        UserAccount objUserAccount = null;

        int selectedAdmin = countryAdminJTable.getSelectedRow();

        if (selectedAdmin < 0) {
            JOptionPane.showMessageDialog(null, "Please select an Admin");
            return;
        }

        objUserAccount = (UserAccount) countryAdminJTable.getValueAt(selectedAdmin, 2);

        if (objUserAccount != null) {

            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Disabled.getValue())) {
                JOptionPane.showMessageDialog(null, "Acccount is already disabled");
                return;
            }
            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Acitve.getValue())) {

                objUserAccount.setUserAccountStatus(UserAccount.StatusType.Disabled.getValue());
                JOptionPane.showMessageDialog(null, "Acccount disabled");

                populateCountryAdminTable();
            }
        }
    }//GEN-LAST:event_disableJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activateJButton;
    private javax.swing.JButton addAdminJButton;
    private javax.swing.JPasswordField adminConfirmJPasswordField;
    private javax.swing.JPasswordField adminJPasswordField;
    private javax.swing.JTextField adminUserNameJTextField;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel confirmaPasswordJLabel;
    private javax.swing.JTable countryAdminJTable;
    private javax.swing.JButton disableJButton;
    private javax.swing.JLabel firstNameJLabel;
    private javax.swing.JTextField firstNameJTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastNameJLabel;
    private javax.swing.JTextField lastNameJTextField;
    private javax.swing.JLabel mainPasswordJLabel;
    private javax.swing.JLabel title1JLabel;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JLabel userNameJLabel;
    // End of variables declaration//GEN-END:variables
}
