/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FieldExpertRole;

import Business.CountryEnterprise.CountryEnterprise;
import Business.Helper.CardLayoutContainer;
import Business.Organization.Organization;
import Business.Person.FieldExpert.FieldDrive;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FieldDriveWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author "Smit Shah, NUID: 001748537, AED - Final Project"
 */
public class ManageFieldDriveJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFiledDrive
     */
    private JPanel userProcessContainer;
    private UserAccount objUserAccount;
    private CountryEnterprise objCountryEnterprise;
    private Organization objOrganization;

    public ManageFieldDriveJPanel(JPanel userProcessContainerPassed, UserAccount objUserAccountPassed,
            CountryEnterprise objCountryEnterprisePassed, Organization objOrganizationPassed) {
        initComponents();

        this.userProcessContainer = userProcessContainerPassed;
        this.objUserAccount = objUserAccountPassed;
        this.objCountryEnterprise = objCountryEnterprisePassed;
        this.objOrganization = objOrganizationPassed;

        populateFieldDrive();

    }

    private void populateFieldDrive() {

        DefaultTableModel dtm = (DefaultTableModel) fieldDriveJTable.getModel();
        dtm.setRowCount(0);

        for (FieldDrive objFieldDrive : objUserAccount.getObjPerson().getObjFieldDriveDirectory().getFieldDriveList()) {

            Object row[] = new Object[5];
            row[0] = objFieldDrive;
            row[1] = objFieldDrive.getFieldDriveName();
            row[2] = objFieldDrive.getFieldDriveState();
            row[3] = objFieldDrive.getFieldDriveVillage();
            row[4] = objFieldDrive.getFieldAgentAssignedList().size();

            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fieldDriveJTable = new javax.swing.JTable();
        addNewDriveJButton = new javax.swing.JButton();
        title2JLabel = new javax.swing.JLabel();
        idJLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        driveIdJTextField = new javax.swing.JTextField();
        nameJLabel = new javax.swing.JLabel();
        driveNameTextField = new javax.swing.JTextField();
        countryJLabel = new javax.swing.JLabel();
        driveCountryTextField = new javax.swing.JTextField();
        stateJLabel = new javax.swing.JLabel();
        driveStateTextField = new javax.swing.JTextField();
        villageJLabel = new javax.swing.JLabel();
        driveVillageTextField = new javax.swing.JTextField();
        sDateJLabel = new javax.swing.JLabel();
        driveStartDateTextField = new javax.swing.JTextField();
        eDateJLabel = new javax.swing.JLabel();
        driveEndDateTextField = new javax.swing.JTextField();
        agentsJLabel = new javax.swing.JLabel();
        driveNoAgentsTextField = new javax.swing.JTextField();
        title3JLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        availableFieldAgentJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        titleJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        titleJLabel.setText("Field Drive");

        fieldDriveJTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fieldDriveJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "State", "Village", "No. of Filed Agents"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fieldDriveJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldDriveJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(fieldDriveJTable);
        if (fieldDriveJTable.getColumnModel().getColumnCount() > 0) {
            fieldDriveJTable.getColumnModel().getColumn(0).setResizable(false);
            fieldDriveJTable.getColumnModel().getColumn(1).setResizable(false);
            fieldDriveJTable.getColumnModel().getColumn(2).setResizable(false);
            fieldDriveJTable.getColumnModel().getColumn(3).setResizable(false);
            fieldDriveJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        addNewDriveJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        addNewDriveJButton.setText("Add Field Drive >>");
        addNewDriveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewDriveJButtonActionPerformed(evt);
            }
        });

        title2JLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        title2JLabel.setText("Filed Drive Details");

        idJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        idJLabel.setText("Field Drive ID");

        driveIdJTextField.setEditable(false);
        driveIdJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        nameJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        nameJLabel.setText("Field Drive Name");

        driveNameTextField.setEditable(false);
        driveNameTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        countryJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        countryJLabel.setText("Country");

        driveCountryTextField.setEditable(false);
        driveCountryTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        stateJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        stateJLabel.setText("State");

        driveStateTextField.setEditable(false);
        driveStateTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        villageJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        villageJLabel.setText("Village");

        driveVillageTextField.setEditable(false);
        driveVillageTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        sDateJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        sDateJLabel.setText("Start Date");

        driveStartDateTextField.setEditable(false);
        driveStartDateTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        eDateJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        eDateJLabel.setText("End Date");

        driveEndDateTextField.setEditable(false);
        driveEndDateTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        agentsJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        agentsJLabel.setText("No. of Field Agents");

        driveNoAgentsTextField.setEditable(false);
        driveNoAgentsTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        title3JLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        title3JLabel.setText("Assigned Field Agents");

        availableFieldAgentJTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        availableFieldAgentJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Agent ID", "Agent Name", "User Name", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(availableFieldAgentJTable);
        if (availableFieldAgentJTable.getColumnModel().getColumnCount() > 0) {
            availableFieldAgentJTable.getColumnModel().getColumn(0).setResizable(false);
            availableFieldAgentJTable.getColumnModel().getColumn(1).setResizable(false);
            availableFieldAgentJTable.getColumnModel().getColumn(2).setResizable(false);
            availableFieldAgentJTable.getColumnModel().getColumn(3).setResizable(false);
            availableFieldAgentJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addNewDriveJButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addComponent(title2JLabel)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(titleJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(eDateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(driveEndDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(villageJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(34, 34, 34)
                                    .addComponent(driveVillageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(countryJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(driveCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(nameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(34, 34, 34)
                                            .addComponent(driveNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(idJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(34, 34, 34)
                                            .addComponent(driveIdJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(stateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(driveStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(sDateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(34, 34, 34)
                                    .addComponent(driveStartDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(agentsJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(driveNoAgentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backJButton)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(title3JLabel)))
                .addContainerGap(177, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleJLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addNewDriveJButton)
                .addGap(31, 31, 31)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(title2JLabel)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idJLabel)
                    .addComponent(driveIdJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameJLabel)
                    .addComponent(driveNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryJLabel)
                    .addComponent(driveCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateJLabel)
                    .addComponent(driveStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(villageJLabel)
                    .addComponent(driveVillageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sDateJLabel)
                    .addComponent(driveStartDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eDateJLabel)
                    .addComponent(driveEndDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agentsJLabel)
                    .addComponent(driveNoAgentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(title3JLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backJButton)
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addNewDriveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewDriveJButtonActionPerformed

        AddNewFieldDriveJPanel objAddNewFieldDriveJPanel = new AddNewFieldDriveJPanel(userProcessContainer, objUserAccount, objCountryEnterprise, objOrganization);

        CardLayoutContainer.addNewCardLayout(userProcessContainer, "AddNewFieldDriveJPanel", objAddNewFieldDriveJPanel);
    }//GEN-LAST:event_addNewDriveJButtonActionPerformed

    private void fieldDriveJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldDriveJTableMouseClicked

        FieldDrive objSelectedFieldDrive;

        int selectedDrive = fieldDriveJTable.getSelectedRow();

        if (selectedDrive < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Drive");
            return;
        }

        objSelectedFieldDrive = (FieldDrive) fieldDriveJTable.getValueAt(selectedDrive, 0);;

        if (objSelectedFieldDrive != null) {

            driveIdJTextField.setText(String.valueOf(objSelectedFieldDrive.getFieldDriveID()));
            driveNameTextField.setText(objSelectedFieldDrive.getFieldDriveName());
            driveCountryTextField.setText(objSelectedFieldDrive.getFieldDriveCountry());
            driveStateTextField.setText(objSelectedFieldDrive.getFieldDriveState());
            driveVillageTextField.setText(objSelectedFieldDrive.getFieldDriveVillage());
            driveStartDateTextField.setText(String.valueOf(objSelectedFieldDrive.getDriveStartDate()));
            driveEndDateTextField.setText(String.valueOf(objSelectedFieldDrive.getDriveEndDate()));
            driveNoAgentsTextField.setText(String.valueOf(objSelectedFieldDrive.getFieldAgentAssignedList().size()));

            populateAssignedAgent(objSelectedFieldDrive, objSelectedFieldDrive.getFieldAgentAssignedList());

        } else {
            JOptionPane.showMessageDialog(null, "Please select again");
        }

    }//GEN-LAST:event_fieldDriveJTableMouseClicked

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        CardLayoutContainer.removeCurrentCardLayout(userProcessContainer, this);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void populateAssignedAgent(FieldDrive objFieldDrivePassed, ArrayList<UserAccount> userAccountList) {

        FieldDrive objFieldDrive = objFieldDrivePassed;

        DefaultTableModel dtm = (DefaultTableModel) availableFieldAgentJTable.getModel();
        dtm.setRowCount(0);

        for (UserAccount objUserAccount : userAccountList) {

            for (WorkRequest objWorkRequest : objUserAccount.getObjWorkQueue().getWorkRequestList()) {

                if (objWorkRequest instanceof FieldDriveWorkRequest) {

                    FieldDriveWorkRequest objFieldDriveWorkRequest = (FieldDriveWorkRequest) objWorkRequest;

                    if (objFieldDriveWorkRequest.getObjFieldDrive().getFieldDriveID() == objFieldDrive.getFieldDriveID()) {

                        Object row[] = new Object[5];
                        row[0] = objUserAccount.getObjPerson().getPersonID();
                        row[1] = objUserAccount.getObjPerson();
                        row[2] = objUserAccount;
                        row[3] = objFieldDriveWorkRequest.getMessage();
                        row[4] = objFieldDriveWorkRequest;

                        dtm.addRow(row);
                    }
                }
            }
        }
    }

    //TO call the method to populate table when uses comes back to this screen
    @Override
    public void setVisible(boolean aFlag) {

        super.setVisible(aFlag);

        this.populateFieldDrive();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewDriveJButton;
    private javax.swing.JLabel agentsJLabel;
    private javax.swing.JTable availableFieldAgentJTable;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel countryJLabel;
    private javax.swing.JTextField driveCountryTextField;
    private javax.swing.JTextField driveEndDateTextField;
    private javax.swing.JTextField driveIdJTextField;
    private javax.swing.JTextField driveNameTextField;
    private javax.swing.JTextField driveNoAgentsTextField;
    private javax.swing.JTextField driveStartDateTextField;
    private javax.swing.JTextField driveStateTextField;
    private javax.swing.JTextField driveVillageTextField;
    private javax.swing.JLabel eDateJLabel;
    private javax.swing.JTable fieldDriveJTable;
    private javax.swing.JLabel idJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JLabel sDateJLabel;
    private javax.swing.JLabel stateJLabel;
    private javax.swing.JLabel title2JLabel;
    private javax.swing.JLabel title3JLabel;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JLabel villageJLabel;
    // End of variables declaration//GEN-END:variables
}
