/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FieldExpertRole;

import Business.CountryEnterprise.CountryEnterprise;
import Business.Helper.CardLayoutContainer;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PPVerificationWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author "Smit Shah, NUID: 001748537, AED - Final Project"
 */
public class ManagePoorPeopleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePoorPeopleJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount objUserAccount;
    private CountryEnterprise objCountryEnterprise;
    private Organization objOrganization;

    public ManagePoorPeopleJPanel(JPanel userProcessContainerPassed, UserAccount objUserAccountPassed,
            CountryEnterprise objCountryEnterprisePassed, Organization objOrganizationPassed) {
        initComponents();

        this.userProcessContainer = userProcessContainerPassed;
        this.objUserAccount = objUserAccountPassed;
        this.objCountryEnterprise = objCountryEnterprisePassed;
        this.objOrganization = objOrganizationPassed;

        populateOrgWorkRequestTable();
        populateMyWorkRequestTable();
    }

    private void populateOrgWorkRequestTable() {

        DefaultTableModel dtm = (DefaultTableModel) orgWorkRequestJTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest objWorkRequest : objOrganization.getObjWorkQueue().getWorkRequestList()) {

            if (objWorkRequest instanceof PPVerificationWorkRequest) {

                PPVerificationWorkRequest objPPVerificationWorkRequest = (PPVerificationWorkRequest) objWorkRequest;

                Object row[] = new Object[6];
                row[0] = objWorkRequest.getWorkRequestID();
                row[1] = objPPVerificationWorkRequest;
                row[2] = objWorkRequest.getSender();
                row[3] = (objWorkRequest.getReceiver() == null) ? ("N/A") : (objWorkRequest.getReceiver());//objWorkRequest.getReceiver();
                row[4] = objWorkRequest.getMessage();
                row[5] = objWorkRequest.getStatus(); //Status

                dtm.addRow(row);
            }
        }
    }

    private void populateMyWorkRequestTable() {

        DefaultTableModel dtm = (DefaultTableModel) myWorkRequestJTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest objWorkRequest : objUserAccount.getObjWorkQueue().getWorkRequestList()) { //objOrganization.getObjWorkQueue().getWorkRequestList()) {

            if (objWorkRequest instanceof PPVerificationWorkRequest) {

                PPVerificationWorkRequest objPPVerificationWorkRequest = (PPVerificationWorkRequest) objWorkRequest;

                if (objPPVerificationWorkRequest.getReceiver() != null) {

                    Object row[] = new Object[6];
                    row[0] = objWorkRequest.getWorkRequestID();
                    row[1] = objPPVerificationWorkRequest;
                    row[2] = objWorkRequest.getSender();
                    row[3] = objWorkRequest.getReceiver(); 
                    row[4] = objWorkRequest.getMessage();
                    row[5] = objWorkRequest.getStatus(); //Status

                    dtm.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        myWorkRequestJTable = new javax.swing.JTable();
        assignedJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        title2JLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        orgWorkRequestJTable = new javax.swing.JTable();
        backJButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));

        titleJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        titleJLabel.setText("Poor People Verification");

        myWorkRequestJTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        myWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Poor People Name", "Field Agent Name", "Filed Expert Name", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(myWorkRequestJTable);
        if (myWorkRequestJTable.getColumnModel().getColumnCount() > 0) {
            myWorkRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            myWorkRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            myWorkRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            myWorkRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            myWorkRequestJTable.getColumnModel().getColumn(4).setResizable(false);
            myWorkRequestJTable.getColumnModel().getColumn(5).setResizable(false);
        }

        assignedJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        assignedJButton.setText("Assign to Me");
        assignedJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignedJButtonActionPerformed(evt);
            }
        });

        processJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        processJButton.setText("Work on this Request");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });

        title2JLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        title2JLabel.setText("My Work Request");

        orgWorkRequestJTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orgWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Poor People Name", "Field Agent Name", "Filed Expert Name", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orgWorkRequestJTable);
        if (orgWorkRequestJTable.getColumnModel().getColumnCount() > 0) {
            orgWorkRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            orgWorkRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            orgWorkRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            orgWorkRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            orgWorkRequestJTable.getColumnModel().getColumn(4).setResizable(false);
            orgWorkRequestJTable.getColumnModel().getColumn(5).setResizable(false);
        }

        backJButton2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backJButton2.setText("<< Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(titleJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(358, 358, 358)
                        .addComponent(title2JLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backJButton2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(assignedJButton)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(processJButton)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(64, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(titleJLabel)
                .addGap(250, 250, 250)
                .addComponent(assignedJButton)
                .addGap(9, 9, 9)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(title2JLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(processJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(backJButton2)
                .addGap(80, 80, 80))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(84, 84, 84)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(523, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignedJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignedJButtonActionPerformed

        PPVerificationWorkRequest objPPVerificationWorkRequest = null;

        int selectedRequest = orgWorkRequestJTable.getSelectedRow();

        if (selectedRequest < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Work Request");
            return;
        }

        objPPVerificationWorkRequest = (PPVerificationWorkRequest) orgWorkRequestJTable.getValueAt(selectedRequest, 1);

        if (objPPVerificationWorkRequest != null) {

            if (objPPVerificationWorkRequest.getReceiver() == null) {
                objPPVerificationWorkRequest.setReceiver(objUserAccount);
                objPPVerificationWorkRequest.setStatus(WorkRequest.WorkRequestStatus.PROCESSING.getValue());

                objUserAccount.getObjWorkQueue().getWorkRequestList().add(objPPVerificationWorkRequest);

                JOptionPane.showMessageDialog(null, "Reguest is now assigned to you");
                
                populateOrgWorkRequestTable();
                populateMyWorkRequestTable();

            } else if (objPPVerificationWorkRequest.getReceiver().getUserName().equals(objUserAccount.getUserName())) {
                JOptionPane.showMessageDialog(null, "It is already assigned to you");
            } else {
                JOptionPane.showMessageDialog(null, "You cannot assign this request. It is already assigned to someone");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select again");
        }


    }//GEN-LAST:event_assignedJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        PPVerificationWorkRequest objPPVerificationWorkRequest = null;

        int selectedRequest = myWorkRequestJTable.getSelectedRow();

        if (selectedRequest < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Work Request");
            return;
        }

        objPPVerificationWorkRequest = (PPVerificationWorkRequest) myWorkRequestJTable.getValueAt(selectedRequest, 1);

        if (objPPVerificationWorkRequest != null) {

            if (objPPVerificationWorkRequest.getReceiver().equals(objUserAccount)) {

                if (objPPVerificationWorkRequest.getStatus().equals(WorkRequest.WorkRequestStatus.ASSIGNED.getValue())
                        || objPPVerificationWorkRequest.getStatus().equals(WorkRequest.WorkRequestStatus.PROCESSING.getValue())) {
                    objPPVerificationWorkRequest.setStatus(WorkRequest.WorkRequestStatus.PROCESSING.getValue());

                    //Open Next Panel
                    VerifyPoorPeopleJPanel objVerifyPoorPeopleJPanel = new VerifyPoorPeopleJPanel(userProcessContainer, objUserAccount, objPPVerificationWorkRequest);

                    CardLayoutContainer.addNewCardLayout(userProcessContainer, "VerifyPoorPeopleJPanel", objVerifyPoorPeopleJPanel);
                } else if (objPPVerificationWorkRequest.getStatus().equals(WorkRequest.WorkRequestStatus.COMPLETED.getValue())) {
                    JOptionPane.showMessageDialog(null, "You cannot work on this work requet. It is already Completed");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select again");
        }

        populateMyWorkRequestTable();
    }//GEN-LAST:event_processJButtonActionPerformed

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed

        CardLayoutContainer.removeCurrentCardLayout(userProcessContainer, this);
    }//GEN-LAST:event_backJButton2ActionPerformed

    @Override
    public void setVisible(boolean aFlag) {

        super.setVisible(aFlag);

        this.populateMyWorkRequestTable();
        this.populateOrgWorkRequestTable();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignedJButton;
    private javax.swing.JButton backJButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable myWorkRequestJTable;
    private javax.swing.JTable orgWorkRequestJTable;
    private javax.swing.JButton processJButton;
    private javax.swing.JLabel title2JLabel;
    private javax.swing.JLabel titleJLabel;
    // End of variables declaration//GEN-END:variables
}
