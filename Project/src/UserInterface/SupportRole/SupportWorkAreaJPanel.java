/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SupportRole;

import Business.CountryEnterprise.CountryEnterprise;
import Business.Helper.CardLayoutContainer;
import Business.Helper.GenerateReports;
import Business.Helper.Validation;
import Business.Organization.Organization;
import Business.Organization.PoorPeopleOrganization;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorldEnterprise;
import UserInterface.ChangePasswordJPanel;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author "Smit Shah, NUID: 001748537, AED - Final Project"
 */
public class SupportWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupportWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount objSupportUserAccount;
    private WorldEnterprise objWorldEnterprise;
    private Organization objOrganization;
    private String personSearch;

    public SupportWorkAreaJPanel(JPanel userProcessContainerPassed, UserAccount objUserAccountPassed,
            WorldEnterprise objWorldEnterprisePassed, Organization objOrganizationPassed) {
        initComponents();

        this.userProcessContainer = userProcessContainerPassed;
        this.objSupportUserAccount = objUserAccountPassed;
        this.objWorldEnterprise = objWorldEnterprisePassed;
        this.objOrganization = objOrganizationPassed;

        populateCountryComboBox();
        loadForm();
    }

    private void loadForm() {

        nameDisplayJLabel.setText(objSupportUserAccount.getObjPerson().toString());
        roleDisplayJLabel.setText(objSupportUserAccount.getObjRole().toString());
    }

    private void populateCountryComboBox() {

        countryJComboBox.removeAllItems();

        for (CountryEnterprise objCountryEnterprise : objWorldEnterprise.getObjCountryEnterpriseDirectory().getCountryEnterpriseList()) {
            countryJComboBox.addItem(objCountryEnterprise);
        }
    }

    private void populatePoorPeopleTable(CountryEnterprise objCountryEnterprise) {

        DefaultTableModel dtm = (DefaultTableModel) poorPeopleJTable.getModel();
        dtm.setRowCount(0);

        for (Organization objPPOrganization : objCountryEnterprise.getObjOrganizationDirectory().getOrganizationList()) {
            if (objPPOrganization instanceof PoorPeopleOrganization) {
                for (UserAccount objUserAccount : objPPOrganization.getObjUserAccountDirectory().getUserAccountList()) {
                    Person objPerson = objUserAccount.getObjPerson();

                    Object row[] = new Object[4];
                    row[0] = objPerson.getPersonInternationalID();
                    row[1] = objPerson;
                    row[2] = objUserAccount;
                    row[3] = objUserAccount.getUserAccountStatus();

                    dtm.addRow(row);
                }
            }
        }
    }

    private void populatePoorPeopleTable(String personSearch) {

        DefaultTableModel dtm = (DefaultTableModel) poorPeopleJTable.getModel();
        dtm.setRowCount(0);

        for (CountryEnterprise objCountryEnterprise : objWorldEnterprise.getObjCountryEnterpriseDirectory().getCountryEnterpriseList()) {
            for (Organization objPPOrganization : objCountryEnterprise.getObjOrganizationDirectory().getOrganizationList()) {
                if (objPPOrganization instanceof PoorPeopleOrganization) {
                    for (UserAccount objUserAccount : objPPOrganization.getObjUserAccountDirectory().getUserAccountList()) {

                        if (objUserAccount.getObjPerson().getPersonFirstName().contains(personSearch)
                                || objUserAccount.getObjPerson().getPersonLastName().contains(personSearch)) {

                            Person objPerson = objUserAccount.getObjPerson();

                            Object row[] = new Object[4];
                            row[0] = objPerson.getPersonInternationalID();
                            row[1] = objPerson;
                            row[2] = objUserAccount;
                            row[3] = objUserAccount.getUserAccountStatus();

                            dtm.addRow(row);
                        }

                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        countryJComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        poorPeopleJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        searchJButton = new javax.swing.JButton();
        activateJButton2 = new javax.swing.JButton();
        pendingJButton = new javax.swing.JButton();
        disableJButton = new javax.swing.JButton();
        nameJLabel = new javax.swing.JLabel();
        roleJLabel = new javax.swing.JLabel();
        roleDisplayJLabel = new javax.swing.JLabel();
        nameDisplayJLabel = new javax.swing.JLabel();
        changePasswordJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Support Work Area");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Select Country:");

        countryJComboBox.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        countryJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryJComboBoxActionPerformed(evt);
            }
        });

        poorPeopleJTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        poorPeopleJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "International ID", "Name", "User Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        poorPeopleJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                poorPeopleJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(poorPeopleJTable);
        if (poorPeopleJTable.getColumnModel().getColumnCount() > 0) {
            poorPeopleJTable.getColumnModel().getColumn(0).setResizable(false);
            poorPeopleJTable.getColumnModel().getColumn(1).setResizable(false);
            poorPeopleJTable.getColumnModel().getColumn(2).setResizable(false);
            poorPeopleJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Person Name");

        nameJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        searchJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        searchJButton.setText("Search");
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJButtonActionPerformed(evt);
            }
        });

        activateJButton2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        activateJButton2.setText("Activate");
        activateJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activateJButton2ActionPerformed(evt);
            }
        });

        pendingJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        pendingJButton.setText("Pending");
        pendingJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendingJButtonActionPerformed(evt);
            }
        });

        disableJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        disableJButton.setText("Disable");
        disableJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disableJButtonActionPerformed(evt);
            }
        });

        nameJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        nameJLabel.setText("Welcome:");

        roleJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        roleJLabel.setText("Role:");

        roleDisplayJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        nameDisplayJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        changePasswordJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        changePasswordJButton.setText("Change Password >>");
        changePasswordJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(nameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(nameDisplayJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(changePasswordJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(roleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(roleDisplayJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(68, 68, 68)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(activateJButton2)
                                    .addGap(275, 275, 275)
                                    .addComponent(pendingJButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(disableJButton))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 895, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(countryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(searchJButton))))))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameJLabel)
                        .addComponent(nameDisplayJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(changePasswordJButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleJLabel)
                    .addComponent(roleDisplayJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(countryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchJButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activateJButton2)
                    .addComponent(pendingJButton)
                    .addComponent(disableJButton))
                .addContainerGap(215, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void countryJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryJComboBoxActionPerformed

        CountryEnterprise objCountryEnterprise = (CountryEnterprise) countryJComboBox.getSelectedItem();

        if (objCountryEnterprise != null) {
            populatePoorPeopleTable(objCountryEnterprise);
        }
    }//GEN-LAST:event_countryJComboBoxActionPerformed

    private void poorPeopleJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_poorPeopleJTableMouseClicked

    }//GEN-LAST:event_poorPeopleJTableMouseClicked

    private void activateJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activateJButton2ActionPerformed

        UserAccount objUserAccount = null;

        int selectedUser = poorPeopleJTable.getSelectedRow();

        if (selectedUser < 0) {
            JOptionPane.showMessageDialog(null, "Please select a User");
            return;
        }

        objUserAccount = (UserAccount) poorPeopleJTable.getValueAt(selectedUser, 2);

        if (objUserAccount != null) {
            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Acitve.getValue())) {

                JOptionPane.showMessageDialog(null, "Acccount is already active");
                return;
            }
            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Disabled.getValue())
                    || objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Pending.getValue())) {

                String previousStatus = objUserAccount.getUserAccountStatus();

                objUserAccount.setUserAccountStatus(UserAccount.StatusType.Acitve.getValue());
                JOptionPane.showMessageDialog(null, "Acccount activated");

                populatePoorPeopleTable(objUserAccount.getObjPerson().getPersonFirstName());

                //AccountLogs
                String accountLogs = objUserAccount.getObjPerson().getPersonID() + ","
                        + objUserAccount.getObjPerson() + ","
                        + objUserAccount + ","
                        + previousStatus + ","
                        + objUserAccount.getUserAccountStatus() + ","
                        + objSupportUserAccount + ","
                        + objOrganization + ","
                        + new Date();

                GenerateReports.userAccountLogs(accountLogs);
            }
        }


    }//GEN-LAST:event_activateJButton2ActionPerformed

    private void pendingJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pendingJButtonActionPerformed

        UserAccount objUserAccount = null;

        int selectedUser = poorPeopleJTable.getSelectedRow();

        if (selectedUser < 0) {
            JOptionPane.showMessageDialog(null, "Please select a User");
            return;
        }

        objUserAccount = (UserAccount) poorPeopleJTable.getValueAt(selectedUser, 2);

        if (objUserAccount != null) {

            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Pending.getValue())) {

                JOptionPane.showMessageDialog(null, "Acccount is already Pending");
                return;
            }
            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Disabled.getValue())
                    || objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Acitve.getValue())) {

                String previousStatus = objUserAccount.getUserAccountStatus();

                objUserAccount.setUserAccountStatus(UserAccount.StatusType.Pending.getValue());

                JOptionPane.showMessageDialog(null, "Acccount set to Pending");

                populatePoorPeopleTable(objUserAccount.getObjPerson().getPersonFirstName());

                //AccountLogs
                String accountLogs = objUserAccount.getObjPerson().getPersonID() + ","
                        + objUserAccount.getObjPerson() + ","
                        + objUserAccount + ","
                        + previousStatus + ","
                        + objUserAccount.getUserAccountStatus() + ","
                        + objSupportUserAccount + ","
                        + objOrganization + ","
                        + new Date();

                GenerateReports.userAccountLogs(accountLogs);
            }
        }
    }//GEN-LAST:event_pendingJButtonActionPerformed

    private void disableJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disableJButtonActionPerformed

        UserAccount objUserAccount = null;

        int selectedUser = poorPeopleJTable.getSelectedRow();

        if (selectedUser < 0) {
            JOptionPane.showMessageDialog(null, "Please select a User");
            return;
        }

        objUserAccount = (UserAccount) poorPeopleJTable.getValueAt(selectedUser, 2);

        if (objUserAccount != null) {

            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Disabled.getValue())) {

                JOptionPane.showMessageDialog(null, "Acccount is already Disabled");
                return;
            }
            if (objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Acitve.getValue())
                    || objUserAccount.getUserAccountStatus().equals(UserAccount.StatusType.Pending.getValue())) {

                String previousStatus = objUserAccount.getUserAccountStatus();

                objUserAccount.setUserAccountStatus(UserAccount.StatusType.Disabled.getValue());
                JOptionPane.showMessageDialog(null, "Acccount Disabled");
                populatePoorPeopleTable(objUserAccount.getObjPerson().getPersonFirstName());

                //AccountLogs
                String accountLogs = objUserAccount.getObjPerson().getPersonID() + ","
                        + objUserAccount.getObjPerson() + ","
                        + objUserAccount + ","
                        + previousStatus + ","
                        + objUserAccount.getUserAccountStatus() + ","
                        + objSupportUserAccount + ","
                        + objOrganization + ","
                        + new Date();

                GenerateReports.userAccountLogs(accountLogs);
            }
        }
    }//GEN-LAST:event_disableJButtonActionPerformed

    private void searchJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJButtonActionPerformed

        //Validation
        boolean validationSuccess;
        validationSuccess = validation();

        if (validationSuccess) {
            populatePoorPeopleTable(personSearch);
        }

    }//GEN-LAST:event_searchJButtonActionPerformed

    private void changePasswordJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordJButtonActionPerformed

        ChangePasswordJPanel objChangePasswordJPanel = new ChangePasswordJPanel(userProcessContainer, objSupportUserAccount);

        CardLayoutContainer.addNewCardLayout(userProcessContainer, "ChangePasswordJPanel", objChangePasswordJPanel);
    }//GEN-LAST:event_changePasswordJButtonActionPerformed

    private boolean validation() {

        personSearch = nameJTextField.getText().trim();

        if (Validation.checkForNull(personSearch)) {
            JOptionPane.showMessageDialog(null, "Please enter person name to search");
            nameJTextField.requestFocus();
            return false;
        }

        if (Validation.checkForOnlyAlphabets(personSearch)) {
            JOptionPane.showMessageDialog(null, "Please enter a proper name. It should contain only alphabets");
            nameJTextField.requestFocus();
            return false;
        }

        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activateJButton2;
    private javax.swing.JButton changePasswordJButton;
    private javax.swing.JComboBox countryJComboBox;
    private javax.swing.JButton disableJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameDisplayJLabel;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JButton pendingJButton;
    private javax.swing.JTable poorPeopleJTable;
    private javax.swing.JLabel roleDisplayJLabel;
    private javax.swing.JLabel roleJLabel;
    private javax.swing.JButton searchJButton;
    // End of variables declaration//GEN-END:variables
}
