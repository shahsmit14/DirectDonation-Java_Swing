/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.RegSiteAgentRole;

import Business.CountryEnterprise.CountryEnterprise;
import Business.CountryEnterprise.RegSiteEnterprise.RegisteredSiteEnterprise;
import Business.Helper.AuthenticateUser;
import Business.Helper.CardLayoutContainer;
import Business.Helper.Validation;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.Role.Role;
import Business.Transaction.Transaction;
import Business.UserAccount.UserAccount;
import Business.WorldEnterprise;
import UserInterface.ChangePasswordJPanel;
import java.math.BigDecimal;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author "Smit Shah, NUID: 001748537, AED - Final Project"
 */
public class RegSiteAgentWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RegSiteAgentWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount objAgentUserAccount, objPPUserAcount;
    private WorldEnterprise objWorldEnterprise;
    private CountryEnterprise objCountryEnterprise;
    private RegisteredSiteEnterprise objRegisteredSiteEnterprise;
    private Organization objOrganization;
    private String userName, password, pin, transferAmount;
    private BigDecimal amount;

    public RegSiteAgentWorkAreaJPanel(JPanel userProcessContainerPassed, UserAccount objUserAccountPassed,
            WorldEnterprise objWorldEnterprisePassed, CountryEnterprise objCountryEnterprisePassed,
            RegisteredSiteEnterprise objRegisteredSiteEnterprisePassed, Organization objOrganizationPassed) {

        initComponents();
        this.userProcessContainer = userProcessContainerPassed;
        this.objAgentUserAccount = objUserAccountPassed;
        this.objWorldEnterprise = objWorldEnterprisePassed;
        this.objCountryEnterprise = objCountryEnterprisePassed;
        this.objRegisteredSiteEnterprise = objRegisteredSiteEnterprisePassed;
        this.objOrganization = objOrganizationPassed;

        populateTransactionTable();
        populateBalance();

        intlIdJTextField.setEnabled(false);
        personNameJTextField.setEnabled(false);
        availableBalJTextField.setEnabled(false);
        verifiedJButton.setEnabled(false);

        pinJPasswordField.setEnabled(false);
        amountJTextField.setEnabled(false);
        withdrawJButton.setEnabled(false);
        loadForm();
    }

    private void loadForm() {

        nameDisplayJLabel.setText(objAgentUserAccount.getObjPerson().toString());
        roleDisplayJLabel.setText(objAgentUserAccount.getObjRole().toString());
    }

    private void populateTransactionTable() {

        DefaultTableModel dtm = (DefaultTableModel) transactionJTable.getModel();
        dtm.setRowCount(0);

        for (Transaction objTransaction : objRegisteredSiteEnterprise.getObjTransactionDirectory().getTransactionList()) {

            Object row[] = new Object[9];
            row[0] = objTransaction;
            row[1] = objTransaction.getTransactionSource();
            row[2] = (objTransaction.getObjUserAccountSource() == null) ? ("N/A") : (objTransaction.getObjUserAccountSource().getObjPerson());
            row[3] = objTransaction.getTransactionDestination();
            row[4] = (objTransaction.getObjUserAccountDestination() == null) ? ("N/A") : (objTransaction.getObjUserAccountDestination().getObjPerson());
            row[5] = objTransaction.getTransactionType();
            row[6] = objTransaction.getTransactionMode();
            row[7] = "$ " + String.valueOf(objTransaction.getTransactionBDAmount());
            row[8] = objTransaction.getTransactionDateToDisplay();

            dtm.addRow(row);

        }
    }

    private void populateBalance() {

        objRegisteredSiteEnterprise.getObjTransactionDirectory().updateTransactionAccount();
        BigDecimal balance = objRegisteredSiteEnterprise.getObjTransactionDirectory().getAvailableRealBalance();
        balanceJTextField.setText("$ " + String.valueOf(balance));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        transactionJTable = new javax.swing.JTable();
        balanceJTextField = new javax.swing.JTextField();
        balanceJLabel = new javax.swing.JLabel();
        title1JLabel = new javax.swing.JLabel();
        pinJLabel = new javax.swing.JLabel();
        pinJPasswordField = new javax.swing.JPasswordField();
        withdrawJButton = new javax.swing.JButton();
        withAmountJLabel = new javax.swing.JLabel();
        userNameJLabel = new javax.swing.JLabel();
        amountJTextField = new javax.swing.JTextField();
        userNameJTextField = new javax.swing.JTextField();
        passJLabel = new javax.swing.JLabel();
        mainJPasswordField = new javax.swing.JPasswordField();
        validateJButton = new javax.swing.JButton();
        title3JLabel = new javax.swing.JLabel();
        intIDJLabel = new javax.swing.JLabel();
        intlIdJTextField = new javax.swing.JTextField();
        personNameJLabel = new javax.swing.JLabel();
        personNameJTextField = new javax.swing.JTextField();
        verifiedJButton = new javax.swing.JButton();
        title4JLabel = new javax.swing.JLabel();
        avaiBalJLabel = new javax.swing.JLabel();
        availableBalJTextField = new javax.swing.JTextField();
        resetJButton = new javax.swing.JButton();
        nameJLabel = new javax.swing.JLabel();
        nameDisplayJLabel = new javax.swing.JLabel();
        roleJLabel = new javax.swing.JLabel();
        roleDisplayJLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        title5JLabel = new javax.swing.JLabel();
        title6JLabel = new javax.swing.JLabel();
        changePasswordJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        titleJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        titleJLabel.setText("Reg Site Agent Work Area");

        transactionJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Transaction ID", "Source", "Source User Account", "Destination User Account", "Destination", "Type", "Mode", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(transactionJTable);

        balanceJTextField.setEditable(false);
        balanceJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        balanceJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        balanceJLabel.setText("Balance:");

        title1JLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        title1JLabel.setText("Poor People - Withdraw Money");

        pinJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        pinJLabel.setText("PIN ");

        pinJPasswordField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        pinJPasswordField.setEnabled(false);

        withdrawJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        withdrawJButton.setText("Withdraw");
        withdrawJButton.setEnabled(false);
        withdrawJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawJButtonActionPerformed(evt);
            }
        });

        withAmountJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        withAmountJLabel.setText("Withdraw Amount $");

        userNameJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        userNameJLabel.setText("User Name");

        amountJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        amountJTextField.setEnabled(false);

        userNameJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        userNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameJTextFieldActionPerformed(evt);
            }
        });

        passJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        passJLabel.setText("Password");

        mainJPasswordField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        validateJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        validateJButton.setText("Validate");
        validateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validateJButtonActionPerformed(evt);
            }
        });

        title3JLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        title3JLabel.setText("Verify Details");

        intIDJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        intIDJLabel.setText("International ID");

        intlIdJTextField.setEditable(false);
        intlIdJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        intlIdJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intlIdJTextFieldActionPerformed(evt);
            }
        });

        personNameJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        personNameJLabel.setText("Person Name");

        personNameJTextField.setEditable(false);
        personNameJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        personNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personNameJTextFieldActionPerformed(evt);
            }
        });

        verifiedJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        verifiedJButton.setText("Verified");
        verifiedJButton.setEnabled(false);
        verifiedJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifiedJButtonActionPerformed(evt);
            }
        });

        title4JLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        title4JLabel.setText("Withdraw Amount and PIN");

        avaiBalJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        avaiBalJLabel.setText("Available Balance $");

        availableBalJTextField.setEditable(false);
        availableBalJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        availableBalJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableBalJTextFieldActionPerformed(evt);
            }
        });

        resetJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        resetJButton.setText("Reset");
        resetJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetJButtonActionPerformed(evt);
            }
        });

        nameJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        nameJLabel.setText("Welcome:");

        nameDisplayJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        roleJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        roleJLabel.setText("Role:");

        roleDisplayJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        jSeparator1.setBackground(new java.awt.Color(153, 153, 153));

        jSeparator2.setBackground(new java.awt.Color(204, 204, 204));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        title5JLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        title5JLabel.setText("Registered Site Screen");

        title6JLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        title6JLabel.setText("User Screen");

        changePasswordJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        changePasswordJButton.setText("Change Password >>");
        changePasswordJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(balanceJLabel)
                        .addGap(48, 48, 48)
                        .addComponent(balanceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(440, 440, 440)
                            .addComponent(titleJLabel))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(112, 112, 112)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(passJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(userNameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(validateJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(userNameJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(mainJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(67, 67, 67)
                                            .addComponent(title1JLabel))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(89, 89, 89)
                                            .addComponent(title4JLabel))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(withAmountJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(pinJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(withdrawJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(pinJPasswordField)
                                                .addComponent(amountJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGap(92, 92, 92))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(title6JLabel)
                                    .addGap(215, 215, 215)))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(221, 221, 221)
                                    .addComponent(title3JLabel))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(182, 182, 182)
                                    .addComponent(title5JLabel))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(intIDJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(intlIdJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(personNameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(64, 64, 64)
                                            .addComponent(personNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(avaiBalJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(18, 18, 18)
                                            .addComponent(availableBalJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(resetJButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(verifiedJButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(nameDisplayJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(changePasswordJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(roleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(roleDisplayJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1039, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameJLabel)
                        .addComponent(nameDisplayJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(changePasswordJButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleJLabel)
                    .addComponent(roleDisplayJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(titleJLabel)
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(balanceJLabel)
                    .addComponent(balanceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(title6JLabel)
                        .addGap(40, 40, 40)
                        .addComponent(title1JLabel)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(userNameJLabel)
                                .addGap(29, 29, 29)
                                .addComponent(passJLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(mainJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(validateJButton)))
                        .addGap(43, 43, 43)
                        .addComponent(title4JLabel)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(withAmountJLabel)
                            .addComponent(amountJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pinJLabel)
                            .addComponent(pinJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(withdrawJButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(title5JLabel)
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(170, 170, 170)
                                        .addComponent(verifiedJButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(resetJButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(title3JLabel)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(intIDJLabel)
                                            .addComponent(intlIdJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(personNameJLabel)
                                            .addComponent(personNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(avaiBalJLabel)
                                            .addComponent(availableBalJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void withdrawJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawJButtonActionPerformed

        //Validation
        boolean validationSuccess;
        validationSuccess = validationTransfer();

        if (validationSuccess) {

            BigDecimal availableBalance = objPPUserAcount.getObjPerson().getObjPoorPeopleTransactionDirectory().getAvailableVirtualBalance();

            int availableWithRS = amount.compareTo(objRegisteredSiteEnterprise.getObjTransactionDirectory().getAvailableRealBalance());
            int availableWithPP = amount.compareTo(availableBalance);

            if (availableWithPP < 1) {
                if (availableWithRS < 1) {

                    Person objPerson = objPPUserAcount.getObjPerson();
                    String actualPin = objPerson.getPersonPINNumber();

                    if (actualPin == null || actualPin.equals("")) {
                        JOptionPane.showMessageDialog(null, "Please update your PIN. It is one time activity");
                        return;
                    } else {
                        if (actualPin.equals(pin)) {

                            int response = JOptionPane.showConfirmDialog(null, "Total withdraw of $ " + amount + "/- Do you want to withdraw?", "Confirm",
                                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                            if (response == JOptionPane.YES_OPTION) {
                                //PoorPeople Transaction
                                Transaction objVirtualPPSTransaction = (Transaction) objPPUserAcount.getObjPerson().getObjPoorPeopleTransactionDirectory().addNewTransaction();
                                objVirtualPPSTransaction.setTransactionBDAmount(amount);
                                objVirtualPPSTransaction.setObjUserAccountSource(objPPUserAcount);
                                objVirtualPPSTransaction.setObjUserAccountDestination(objAgentUserAccount);
                                objVirtualPPSTransaction.setTransactionDestination(Transaction.TransactionSourceType.ToRegSiteEnterprise.getValue());
                                objVirtualPPSTransaction.setTransactionSource(Transaction.TransactionSourceType.FromPoorPeople.getValue());
                                objVirtualPPSTransaction.setTransactionType(Transaction.TransactionType.Debit.getValue());
                                objVirtualPPSTransaction.setTransactionMode(Transaction.TransactionModeType.Virtual.getValue());
                                objPPUserAcount.getObjPerson().getObjPoorPeopleTransactionDirectory().updateTransactionAccount();

                                //Registered Site Transaction
                                Transaction objVirtualRSTransaction = (Transaction) objRegisteredSiteEnterprise.getObjTransactionDirectory().addNewTransaction();
                                objVirtualRSTransaction.setTransactionBDAmount(amount);
                                objVirtualRSTransaction.setObjUserAccountSource(objAgentUserAccount);
                                objVirtualRSTransaction.setObjUserAccountDestination(objPPUserAcount);
                                objVirtualRSTransaction.setTransactionSource(Transaction.TransactionSourceType.FromRegSiteEnterprise.getValue());
                                objVirtualRSTransaction.setTransactionDestination(Transaction.TransactionSourceType.ToPoorPeople.getValue());
                                objVirtualRSTransaction.setTransactionType(Transaction.TransactionType.Debit.getValue());
                                objVirtualRSTransaction.setTransactionMode(Transaction.TransactionModeType.Real.getValue());
                                objRegisteredSiteEnterprise.getObjTransactionDirectory().updateTransactionAccount();

                                JOptionPane.showMessageDialog(null, "Withdraw successfully");

                                populateTransactionTable();
                                populateBalance();

                                userNameJTextField.setText(null);
                                mainJPasswordField.setText(null);

                                intlIdJTextField.setEnabled(false);
                                intlIdJTextField.setText(null);
                                personNameJTextField.setEnabled(false);
                                personNameJTextField.setText(null);
                                availableBalJTextField.setEnabled(false);
                                availableBalJTextField.setText(null);
                                verifiedJButton.setEnabled(false);

                                pinJPasswordField.setEnabled(false);
                                pinJPasswordField.setText(null);
                                amountJTextField.setEnabled(false);
                                amountJTextField.setText(null);
                                withdrawJButton.setEnabled(false);
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "Please enter valid PIN");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Site does not have that much money. Please enter a lower amount");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter amount less than available balance");
            }
        }
    }//GEN-LAST:event_withdrawJButtonActionPerformed

    private boolean validationTransfer() {

        pin = String.valueOf(pinJPasswordField.getPassword());
        transferAmount = amountJTextField.getText().trim();//new BigDecimal(amountJTextField.getText());

        if (Validation.checkForNull(pin)) {
            JOptionPane.showMessageDialog(null, "Please enter PIN");
            pinJPasswordField.requestFocus();
            return false;
        }

        if (Validation.checkForNull(transferAmount)) {
            JOptionPane.showMessageDialog(null, "Please enter Amount");
            amountJTextField.requestFocus();
            return false;
        }

        try {
            amount = new BigDecimal(transferAmount);

            if (Validation.checkForNegativeAmount(amount)) {

                JOptionPane.showMessageDialog(null, "Please enter a positive amount");
                amountJTextField.requestFocus();
                return false;
            }

            if (amount.scale() > 2) {
                JOptionPane.showMessageDialog(null, "Please enter a proper amount with only 2 decimal. eg. 108.18");
                amountJTextField.requestFocus();
                return false;
            }

            return true;

        } catch (NumberFormatException exe) {
            JOptionPane.showMessageDialog(null, "Please enter a proper amount");
            amountJTextField.requestFocus();
            return false;
        }

    }


    private void validateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validateJButtonActionPerformed

        //Validation
        boolean validationSuccess;
        validationSuccess = validationLogin();

        if (validationSuccess) {
            UserAccount objCheckUserAccount = AuthenticateUser.authenticateUser(objWorldEnterprise, userName, password);

            if (objCheckUserAccount != null) {

                System.out.println(objCheckUserAccount.getObjRole().toString());
                System.out.println(Role.RoleType.PoorPeople.getValue());

                if (objCheckUserAccount.getObjRole().toString().equals(Role.RoleType.PoorPeople.getValue() + "Role")) {

                    objPPUserAcount = objCheckUserAccount;

                    if (objPPUserAcount.getUserAccountStatus().equals(UserAccount.StatusType.Acitve.getValue())) {
                        Person objPPPerson = objPPUserAcount.getObjPerson();

                        if (objPPPerson.getPersonStatus().equals(Person.PersonRegStatusType.Active.getValue())) {

                            intlIdJTextField.setText(objPPUserAcount.getObjPerson().getPersonInternationalID());
                            personNameJTextField.setText(String.valueOf(objPPUserAcount.getObjPerson()));
                            availableBalJTextField.setText(String.valueOf(objPPUserAcount.getObjPerson().getObjPoorPeopleTransactionDirectory().getAvailableVirtualBalance()));

                            verifiedJButton.setEnabled(true);

                            JOptionPane.showMessageDialog(null, "Account validated. Please verify users details with actual proof");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Account in not active. Please contact administrator or support");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "This functionality is only available for Poor People.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter valid credentials");
            }
        }
    }//GEN-LAST:event_validateJButtonActionPerformed

    private boolean validationLogin() {

        userName = userNameJTextField.getText().trim();
        password = String.valueOf(mainJPasswordField.getPassword());

        if (Validation.checkForNull(userName)) {
            JOptionPane.showMessageDialog(null, "Please enter username");
            userNameJTextField.requestFocus();
            return false;
        }

        if (Validation.checkForNull(password)) {
            JOptionPane.showMessageDialog(null, "Please enter password");
            mainJPasswordField.requestFocus();
            return false;
        }

        return true;
    }


    private void userNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameJTextFieldActionPerformed

    private void intlIdJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intlIdJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_intlIdJTextFieldActionPerformed

    private void personNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personNameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_personNameJTextFieldActionPerformed

    private void verifiedJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifiedJButtonActionPerformed

        pinJPasswordField.setEnabled(true);
        amountJTextField.setEnabled(true);
        withdrawJButton.setEnabled(true);

        JOptionPane.showMessageDialog(null, "Account verified. Please enter transaction details");
    }//GEN-LAST:event_verifiedJButtonActionPerformed

    private void availableBalJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableBalJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availableBalJTextFieldActionPerformed

    private void resetJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetJButtonActionPerformed

        userNameJTextField.setText(null);
        mainJPasswordField.setText(null);

        intlIdJTextField.setEnabled(false);
        intlIdJTextField.setText(null);
        personNameJTextField.setEnabled(false);
        personNameJTextField.setText(null);
        availableBalJTextField.setEnabled(false);
        availableBalJTextField.setText(null);
        verifiedJButton.setEnabled(false);

        pinJPasswordField.setEnabled(false);
        pinJPasswordField.setText(null);
        amountJTextField.setEnabled(false);
        amountJTextField.setText(null);
        withdrawJButton.setEnabled(false);
    }//GEN-LAST:event_resetJButtonActionPerformed

    private void changePasswordJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordJButtonActionPerformed

        ChangePasswordJPanel objChangePasswordJPanel = new ChangePasswordJPanel(userProcessContainer, objAgentUserAccount);

        CardLayoutContainer.addNewCardLayout(userProcessContainer, "ChangePasswordJPanel", objChangePasswordJPanel);
    }//GEN-LAST:event_changePasswordJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountJTextField;
    private javax.swing.JLabel avaiBalJLabel;
    private javax.swing.JTextField availableBalJTextField;
    private javax.swing.JLabel balanceJLabel;
    private javax.swing.JTextField balanceJTextField;
    private javax.swing.JButton changePasswordJButton;
    private javax.swing.JLabel intIDJLabel;
    private javax.swing.JTextField intlIdJTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPasswordField mainJPasswordField;
    private javax.swing.JLabel nameDisplayJLabel;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JLabel passJLabel;
    private javax.swing.JLabel personNameJLabel;
    private javax.swing.JTextField personNameJTextField;
    private javax.swing.JLabel pinJLabel;
    private javax.swing.JPasswordField pinJPasswordField;
    private javax.swing.JButton resetJButton;
    private javax.swing.JLabel roleDisplayJLabel;
    private javax.swing.JLabel roleJLabel;
    private javax.swing.JLabel title1JLabel;
    private javax.swing.JLabel title3JLabel;
    private javax.swing.JLabel title4JLabel;
    private javax.swing.JLabel title5JLabel;
    private javax.swing.JLabel title6JLabel;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JTable transactionJTable;
    private javax.swing.JLabel userNameJLabel;
    private javax.swing.JTextField userNameJTextField;
    private javax.swing.JButton validateJButton;
    private javax.swing.JButton verifiedJButton;
    private javax.swing.JLabel withAmountJLabel;
    private javax.swing.JButton withdrawJButton;
    // End of variables declaration//GEN-END:variables
}
