/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FieldAgentRole;

import Business.CountryEnterprise.CountryEnterprise;
import Business.Helper.CardLayoutContainer;
import Business.Organization.Organization;
import Business.Person.FieldExpert.FieldDrive;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FieldDriveWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author "Smit Shah, NUID: 001748537, AED - Final Project"
 */
public class ManageFieldAgentDriveJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFieldAgentDriveJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount objUserAccount;
    private CountryEnterprise objCountryEnterprise;
    private Organization objOrganization;

    public ManageFieldAgentDriveJPanel(JPanel userProcessContainerPassed, UserAccount objUserAccountPassed,
            CountryEnterprise objCountryEnterprisePassed, Organization objOrganizationPassed) {

        initComponents();

        this.userProcessContainer = userProcessContainerPassed;
        this.objUserAccount = objUserAccountPassed;
        this.objCountryEnterprise = objCountryEnterprisePassed;
        this.objOrganization = objOrganizationPassed;

        populateFieldDrive();

    }

    private void populateFieldDrive() {

        DefaultTableModel dtm = (DefaultTableModel) fieldDriveJTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest objWorkRequest : objUserAccount.getObjWorkQueue().getWorkRequestList()) {

            FieldDriveWorkRequest objFieldDriveWorkRequest = null;
            if (objWorkRequest instanceof FieldDriveWorkRequest) {

                objFieldDriveWorkRequest = (FieldDriveWorkRequest) objWorkRequest;

                Object row[] = new Object[6];
                row[0] = objFieldDriveWorkRequest.getObjFieldDrive();
                row[1] = objFieldDriveWorkRequest.getObjFieldDrive().getFieldDriveName();
                row[2] = objFieldDriveWorkRequest.getObjFieldDrive().getDriveStartDate();
                row[3] = objFieldDriveWorkRequest.getObjFieldDrive().getDriveEndDate();
                row[4] = objFieldDriveWorkRequest.getMessage();
                row[5] = objFieldDriveWorkRequest;

                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        driveIdJTextField = new javax.swing.JTextField();
        fieldDriveJLabel = new javax.swing.JLabel();
        driveNameTextField = new javax.swing.JTextField();
        countryJLabel = new javax.swing.JLabel();
        titleJLabel = new javax.swing.JLabel();
        driveCountryTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        fieldDriveJTable = new javax.swing.JTable();
        stateJLabel = new javax.swing.JLabel();
        driveStateTextField = new javax.swing.JTextField();
        villageJLabel = new javax.swing.JLabel();
        title2JLabel = new javax.swing.JLabel();
        driveVillageTextField = new javax.swing.JTextField();
        idJLabel = new javax.swing.JLabel();
        sDateJLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        driveStartDateTextField = new javax.swing.JTextField();
        eDateJLabel = new javax.swing.JLabel();
        driveEndDateTextField = new javax.swing.JTextField();
        faJLabel = new javax.swing.JLabel();
        driveNoAgentsTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        processingJButton = new javax.swing.JButton();
        completedJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        driveIdJTextField.setEditable(false);
        driveIdJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        fieldDriveJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        fieldDriveJLabel.setText("Field Drive Name");

        driveNameTextField.setEditable(false);
        driveNameTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        countryJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        countryJLabel.setText("Country");

        titleJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        titleJLabel.setText("Field Drive");

        driveCountryTextField.setEditable(false);
        driveCountryTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        fieldDriveJTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fieldDriveJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Drive Name", "Start Date", "End Date", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fieldDriveJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldDriveJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(fieldDriveJTable);
        if (fieldDriveJTable.getColumnModel().getColumnCount() > 0) {
            fieldDriveJTable.getColumnModel().getColumn(0).setResizable(false);
            fieldDriveJTable.getColumnModel().getColumn(1).setResizable(false);
            fieldDriveJTable.getColumnModel().getColumn(2).setResizable(false);
            fieldDriveJTable.getColumnModel().getColumn(3).setResizable(false);
            fieldDriveJTable.getColumnModel().getColumn(4).setResizable(false);
            fieldDriveJTable.getColumnModel().getColumn(5).setResizable(false);
        }

        stateJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        stateJLabel.setText("State");

        driveStateTextField.setEditable(false);
        driveStateTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        villageJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        villageJLabel.setText("Village");

        title2JLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        title2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title2JLabel.setText("Filed Drive Details");

        driveVillageTextField.setEditable(false);
        driveVillageTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        idJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        idJLabel.setText("Field Drive ID");

        sDateJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        sDateJLabel.setText("Start Date");

        driveStartDateTextField.setEditable(false);
        driveStartDateTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        eDateJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        eDateJLabel.setText("End Date");

        driveEndDateTextField.setEditable(false);
        driveEndDateTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        faJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        faJLabel.setText("No. of Field Agents");

        driveNoAgentsTextField.setEditable(false);
        driveNoAgentsTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        processingJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        processingJButton.setText("Processing");
        processingJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processingJButtonActionPerformed(evt);
            }
        });

        completedJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        completedJButton.setText("Completed");
        completedJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completedJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(298, 298, 298)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(eDateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(driveEndDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(villageJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(34, 34, 34)
                                    .addComponent(driveVillageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(countryJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(driveCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(fieldDriveJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(34, 34, 34)
                                            .addComponent(driveNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(idJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(34, 34, 34)
                                            .addComponent(driveIdJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(stateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(driveStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(title2JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(sDateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(34, 34, 34)
                                    .addComponent(driveStartDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(faJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(driveNoAgentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(448, 448, 448)
                        .addComponent(titleJLabel)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(completedJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(processingJButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 77, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(backJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleJLabel)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processingJButton)
                    .addComponent(completedJButton))
                .addGap(31, 31, 31)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(title2JLabel)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idJLabel)
                    .addComponent(driveIdJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldDriveJLabel)
                    .addComponent(driveNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryJLabel)
                    .addComponent(driveCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateJLabel)
                    .addComponent(driveStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(villageJLabel)
                    .addComponent(driveVillageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sDateJLabel)
                    .addComponent(driveStartDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eDateJLabel)
                    .addComponent(driveEndDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(faJLabel)
                    .addComponent(driveNoAgentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(backJButton)
                .addGap(114, 114, 114))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fieldDriveJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldDriveJTableMouseClicked

        FieldDrive objSelectedFieldDrive;

        int selectedDrive = fieldDriveJTable.getSelectedRow();

        if (selectedDrive < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Drive");
            return;
        }

        objSelectedFieldDrive = (FieldDrive) fieldDriveJTable.getValueAt(selectedDrive, 0);

        if (objSelectedFieldDrive != null) {

            driveIdJTextField.setText(String.valueOf(objSelectedFieldDrive.getFieldDriveID()));
            driveNameTextField.setText(objSelectedFieldDrive.getFieldDriveName());
            driveCountryTextField.setText(objSelectedFieldDrive.getFieldDriveCountry());
            driveStateTextField.setText(objSelectedFieldDrive.getFieldDriveState());
            driveVillageTextField.setText(objSelectedFieldDrive.getFieldDriveVillage());
            driveStartDateTextField.setText(String.valueOf(objSelectedFieldDrive.getDriveStartDate()));
            driveEndDateTextField.setText(String.valueOf(objSelectedFieldDrive.getDriveEndDate()));
            driveNoAgentsTextField.setText(String.valueOf(objSelectedFieldDrive.getFieldAgentAssignedList().size()));

        } else {
            JOptionPane.showMessageDialog(null, "Please select again");
        }

    }//GEN-LAST:event_fieldDriveJTableMouseClicked

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        CardLayoutContainer.removeCurrentCardLayout(userProcessContainer, this);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void processingJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processingJButtonActionPerformed

        FieldDriveWorkRequest objFieldDriveWorkRequest = null;

        int selectedDrive = fieldDriveJTable.getSelectedRow();

        if (selectedDrive < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Drive");
            return;
        }

        objFieldDriveWorkRequest = (FieldDriveWorkRequest) fieldDriveJTable.getValueAt(selectedDrive, 5);

        if (objFieldDriveWorkRequest != null) {

            if (objFieldDriveWorkRequest.getStatus().equals(WorkRequest.WorkRequestStatus.ASSIGNED.getValue())) {

                objFieldDriveWorkRequest.setStatus(WorkRequest.WorkRequestStatus.PROCESSING.getValue());
                JOptionPane.showMessageDialog(null, "Drive set to porcessing");
                populateFieldDrive();
                setBlankValues();

            } else {
                JOptionPane.showMessageDialog(null, "Request is already assigned or completed");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select again");
        }


    }//GEN-LAST:event_processingJButtonActionPerformed

    private void completedJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completedJButtonActionPerformed

        FieldDriveWorkRequest objFieldDriveWorkRequest = null;

        int selectedDrive = fieldDriveJTable.getSelectedRow();

        if (selectedDrive < 0) {
            JOptionPane.showMessageDialog(null, "Please select a Drive");
            return;
        }

        objFieldDriveWorkRequest = (FieldDriveWorkRequest) fieldDriveJTable.getValueAt(selectedDrive, 5);

        if (objFieldDriveWorkRequest != null) {

            if (objFieldDriveWorkRequest.getStatus().equals(WorkRequest.WorkRequestStatus.PROCESSING.getValue())) {  //(WorkRequest.WorkRequestStatus.PROCESSING.getValue())) {

                objFieldDriveWorkRequest.setStatus(WorkRequest.WorkRequestStatus.COMPLETED.getValue());
                JOptionPane.showMessageDialog(null, "Drive set to Completed");
                populateFieldDrive();
                setBlankValues();

            } else {
                JOptionPane.showMessageDialog(null, "Request is already completed or please first take the ownership");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select again");
        }
    }//GEN-LAST:event_completedJButtonActionPerformed

    private void setBlankValues() {

        driveIdJTextField.setText(null);
        driveNameTextField.setText(null);
        driveCountryTextField.setText(null);
        driveStateTextField.setText(null);
        driveVillageTextField.setText(null);
        driveStartDateTextField.setText(null);
        driveEndDateTextField.setText(null);
        driveNoAgentsTextField.setText(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton completedJButton;
    private javax.swing.JLabel countryJLabel;
    private javax.swing.JTextField driveCountryTextField;
    private javax.swing.JTextField driveEndDateTextField;
    private javax.swing.JTextField driveIdJTextField;
    private javax.swing.JTextField driveNameTextField;
    private javax.swing.JTextField driveNoAgentsTextField;
    private javax.swing.JTextField driveStartDateTextField;
    private javax.swing.JTextField driveStateTextField;
    private javax.swing.JTextField driveVillageTextField;
    private javax.swing.JLabel eDateJLabel;
    private javax.swing.JLabel faJLabel;
    private javax.swing.JLabel fieldDriveJLabel;
    private javax.swing.JTable fieldDriveJTable;
    private javax.swing.JLabel idJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton processingJButton;
    private javax.swing.JLabel sDateJLabel;
    private javax.swing.JLabel stateJLabel;
    private javax.swing.JLabel title2JLabel;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JLabel villageJLabel;
    // End of variables declaration//GEN-END:variables
}
